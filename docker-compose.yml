version: '4.35.1'

services:

  client-backend:
    image: spring-security-keycloak-api:1.0.0
    env_file:
      - docker-back.env
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: my-webflux-keycloak-app
    ports:
      - '8083:8082'
    networks:
      - local_network
    depends_on:
      - keycloak



  keycloak:
    image: quay.io/keycloak/keycloak:26.0.5
    container_name: keycloak_web
    command:
      - "start-dev"
      - "--import-realm"
    environment:

      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin

#    healthcheck:
##      disable: true
#      test: ["CMD", "curl", "-f", "http://127.0.0.1:8080/"]
#      interval: 15s
#      timeout: 2s
#      retries: 15

    volumes:
      - type: bind
        source: ./src/main/resources/keycloak/import/realm-alchim.json
        target: /opt/keycloak/data/import/realm-alchim.json
        read_only: true
    ports:
      - '8283:8080'  #8080 must be
    restart: on-failure
    networks:
      - local_network

networks:
  local_network:
    driver: bridge



#  postgres:
#    image: docker.io/bitnami/postgresql:16.4.0
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
#      interval: 30s
#      timeout: 60s
#      retries: 5
#      start_period: 80s

#    depends_on:
#      - postgres

#volumes:
#  postgres_data:
#    driver: local